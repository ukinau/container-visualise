version: '2'

services:
  PaymentMangeer:
    image: payment-manager
    ports:
      - "3000:3000"
    network_mode: "bridge"
    labels:
      com.microservice.team: "devteamA"
      com.microservice.component: "Payment"
      com.microservice.depends: |
        RabbitMq:
          SUB: ["notify"]
        Redis:
          READ: ["schedules:*", "test:*"]
          WRITE: ["test:*"]
      com.microservice.description: |
        Sample.  This is for payment related container

  PaymentHistoryDump:
    image: payment-history
    network_mode: "bridge"
    labels:
      com.microservice.team: "devteamA"
      com.microservice.component: "Payment"
      com.microservice.depends: |
        Mysql: null
        Redis:
          WRITE: ["schedules:*"]
      com.microservice.description: |
        Sample.  This is for payment related container

  PaymentOrchestrator:
    image: payment-orchestrator
    network_mode: "bridge"
    labels:
      com.microservice.team: "devteamA"
      com.microservice.component: "Payment"
      com.microservice.depends: |
        RabbitMq: null
        PaymentAgent: null
      com.microservice.description: |
        Sample.  This is for payment related container

  PaymentAgent:
    image: payment-agent
    network_mode: "bridge"
    labels:
      com.microservice.team: "devteamA"
      com.microservice.component: "Payment"
      com.microservice.depends: |
        RabbitMq: null
        Redis:
          WRITE: ["schedules:*"]
      com.microservice.description: |
        Sample.  This is for payment related container

  OrderManager:
    image: order
    ports:
      - "3000:3000"
    labels:
      com.microservice.team: "devteamB"
      com.microservice.component: "Order"
      com.microservice.depends: |
        PaymentMangeer: null
        Mysql: null
      com.microservice.description: |
        Sample.  This is for order related container

  OrderChecker:
    image: order-check
    labels:
      com.microservice.team: "devteamB"
      com.microservice.component: "Order"
      com.microservice.depends: |
        RabbitMq: null
        OrderManager: null
      com.microservice.description: |
        Sample.  This is for order related container
    
  OrderWiper:
    image: order-wiper 
    labels:
      com.microservice.team: "devteamB"
      com.microservice.component: "Order"
      com.microservice.depends: |
        Mysql: null
        Redis: null
      com.microservice.description: |
        Sample.  This is for order related container

  ItemManager:
    image: item
    labels:
      com.microservice.team: "devteamC"
      com.microservice.component: "Item"
      com.microservice.depends: |
        Mysql: null
      com.microservice.description: |
        Sample.  This is for item related container

  ShopInformations:
    image: shop
    labels:
      com.microservice.team: "devteamC"
      com.microservice.component: "Item"
      com.microservice.depends: |
        ItemManager: null
      com.microservice.description: |
        Sample.  This is for item related container

    
  Authenticator:
    image: auth
    labels:
      com.microservice.team: "devteamC"
      com.microservice.component: "Auth"
      com.microservice.depends: |
        Mysql: null
        Vault: null
      com.microservice.description: |
        Sample.  This is for item related container

  PolicyController:
    image: auth
    labels:
      com.microservice.team: "devteamC"
      com.microservice.component: "Auth"
      com.microservice.depends: |
        Mysql: null
        Authenticator: null
      com.microservice.description: |
        Sample.  This is for item related container
